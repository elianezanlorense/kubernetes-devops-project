apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-db
  namespace: k8s-exam
  labels:
    app: postgres-db
    env: production
spec:
  serviceName: postgres-service
  replicas: 1
  selector:
    matchLabels:
      app: postgres-db
  template:
    metadata:
      labels:
        app: postgres-db
        env: production
    spec:
      containers:
        - name: postgres
          image: postgres:12.0-alpine  # Updated image to match docker-compose
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-password
            - name: POSTGRES_HOST_AUTH_METHOD
              value: trust # set directly in the config as the method will not be often changed
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_PORT
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - $(POSTGRES_USER)  # Use the environment variable
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - $(POSTGRES_USER)  
            initialDelaySeconds: 5
            periodSeconds: 5
          terminationGracePeriodSeconds: 30 
      initContainers:
        - name: init-chmod-data
          image: busybox:latest
          command: ["chmod", "-R", "777", "/var/lib/postgresql/data"]
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
        storageClassName: rancher-default
  updateStrategy:
    type: RollingUpdate  